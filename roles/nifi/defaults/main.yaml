nifi_security_properties:
  nifi.node.ssl.isenabled:
    value: true
  nifi.security.keyPasswd:
    value: "{{ certs_jks_key_password }}"
  nifi.security.needClientAuth:
    value: false
  nifi.security.keystore:
    value: "{{ certs_dir }}/{{ certs_jks_file }}"
  nifi.security.keystorePasswd:
    value: "{{ certs_jks_key_password }}"
  nifi.security.keystoreType:
    value: JKS
  nifi.security.truststore:
    value: "{{ certs_dir }}/{{ certs_jks_file }}"
  nifi.security.truststorePasswd:
    value: "{{ certs_jks_key_password }}"
  nifi.security.truststoreType:
    value: JKS
additional_elements: # these elements should only be included if ranger is disabled
  nifi.initial.admin.identity:
    value: hrt_qa@HDF.COM
  # we cannot user template lookup like this:
  # content: "{{ lookup('template', 'node_identity.xml.j2')|quote }}"
  # only inline jinja2 (see: 'vars/' folder)
  content:
    value: "{{ node_identity_rendered }}"

# these dicts / variables are used by `include_role: 'ambari_configure_service'`. Ansible was never looking for the node_identity.xml.j2 in the current role's templates dir, eg.: `ansible-wire-encryption/roles/nifi/templates` had to use inline jinja2
nifi_config_type: "nifi-ambari-ssl-config"
nifi_config_props: "{{ ranger_plugin.nifi.enabled | ternary(nifi_security_properties, nifi_security_properties | combine(additional_elements)) }}"
nifi_enable_knox_sso: false